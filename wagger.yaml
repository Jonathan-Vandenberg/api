openapi: 3.0.3
x-stoplight:
  id: 3ngl049ongtqy
info:
  title: Arttaca - OpenAPI 3.0
  description: |-
    This is the Arttaca API documentation based on the OpenAPI 3.0 specification.

    Some useful links:
    - [Arttaca](https://arttaca.io)
    - [The Arttaca GitHub repository](https://github.com/Arttaca)
  termsOfService: 'https://arttaca.io/'
  contact:
    email: leon@dandelionventures.io
    name: Leon Acosta
    url: leon@dandelionventures.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.11
externalDocs:
  description: Find out more about Arttaca
  url: 'https://arttaca.io/about'
servers:
  - url: 'https://testnet-api.arttaca.io'
tags:
  - name: order
    description: Everything about orders
    externalDocs:
      description: Find out more
      url: 'https://arttaca.io/about'
  - name: trade
    description: Everything about trades
    externalDocs:
      description: Find out more about Arttaca
      url: 'https://arttaca.io/about'
  - name: listing
    description: Everything about trades
    externalDocs:
      description: Find out more about Arttaca
      url: 'https://arttaca.io/about'
  - name: listingActivity
    description: Everything about trades
    externalDocs:
      description: Find out more about Arttaca
      url: 'https://arttaca.io/about'
  - name: auction
    description: Everything about trades
    externalDocs:
      description: Find out more about Arttaca
      url: 'https://arttaca.io/about'
  - name: auctionActivity
    description: Everything about trades
    externalDocs:
      description: Find out more about Arttaca
      url: 'https://arttaca.io/about'
  - name: bid
    description: Everything about trades
    externalDocs:
      description: Find out more about Arttaca
      url: 'https://arttaca.io/about'
paths:
  /order:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateInput'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized.
        '404':
          description: Not found
        '5XX':
            description: Unexpected error.
    get:
      responses:
        '200':
          description: OK
  /order/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateInput'
      responses:
        '200':
          description: OK
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /trade:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradeCreateInput'
      responses:
        '200':
          description: OK
    get:
      responses:
        '200':
          description: OK
  /trade/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradeUpdateInput'
      responses:
        '200':
          description: OK
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /listing:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingCreateInput'
      responses:
        '200':
          description: OK
    get:
      responses:
        '200':
          description: OK
  /listing/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingUpdateInput'
      responses:
        '200':
          description: OK
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /listing-activity:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingActivityCreateInput'
      responses:
        '200':
          description: OK
    get:
      responses:
        '200':
          description: OK
  /listing-activity/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingActivityUpdateInput'
      responses:
        '200':
          description: OK
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /auction:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionCreateInput'
      responses:
        '200':
          description: OK
    get:
      responses:
        '200':
          description: OK
  /auction/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionUpdateInput'
      responses:
        '200':
          description: OK
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /aution-activity:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionActivityCreateInput'
      responses:
        '200':
          description: OK
    get:
      responses:
        '200':
          description: OK
  /auction-activity/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionActivityUpdateInput'
      responses:
        '200':
          description: OK
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /bid:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidCreateInput'
      responses:
        '200':
          description: OK
    get:
      responses:
        '200':
          description: OK
  /bid/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidUpdateInput'
      responses:
        '200':
          description: OK
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
    OrderCreateInput:
      type: object
      properties:
        userId:
          type: string
        eventId:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
    OrderUpdateInput:
      type: object
      properties:
        userId:
          type: string
        eventId:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
    TradeCreateInput:
      type: object
      properties:
        orderId:
          type: string
        listingId:
          type: string
        quantity:
          type: integer
    TradeUpdateInput:
      type: object
      properties:
        orderId:
          type: string
        listingId:
          type: string
        quantity:
          type: integer
    ListingCreateInput:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ListingType'
        userId:
          type: string
        assetId:
          type: string
        quantity:
          type: integer
        price:
          type: integer
        status:
          $ref: '#/components/schemas/ListingStatus'
        expirationDate:
          type: string
          format: date-time
        signature:
          type: string
    ListingUpdateInput:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ListingType'
        userId:
          type: string
        assetId:
          type: string
        quantity:
          type: integer
        price:
          type: integer
        status:
          $ref: '#/components/schemas/ListingStatus'
        expirationDate:
          type: string
          format: date-time
        signature:
          type: string
    ListingActivityCreateInput:
      type: object
      properties:
        listingId:
          type: string
        reference:
          type: object
    ListingActivityUpdateInput:
      type: object
      properties:
        listingId:
          type: string
        reference:
          type: string
    AuctionCreateInput:
      type: object
      properties:
        listingId:
          type: string
        status:
          $ref: '#/components/schemas/AuctionStatus'
    AuctionUpdateInput:
      type: object
      properties:
        listingId:
          type: string
        status:
          $ref: '#/components/schemas/AuctionStatus'
    AuctionActivityCreateInput:
      type: object
      properties:
        listingId:
          type: string
        reference:
          type: string
    AuctionActivityUpdateInput:
      type: object
      properties:
        listingId:
          type: string
        reference:
          type: string
    BidCreateInput:
      type: object
      properties:
        auctionId:
          type: string
        price:
          type: integer
        status:
          $ref: '#/components/schemas/BidStatus'
    BidUpdateInput:
      type: object
      properties:
        auctionId:
          type: string
        price:
          type: integer
        status:
          $ref: '#/components/schemas/BidStatus'
    OrderStatus:
      type: string
      enum:
        - EXECUTED
        - PENDING
    ListingType:
      type: string
      enum:
        - x
        - OFFER
        - SELL
        - AUCTION
    ListingStatus:
      type: string
      enum:
        - ACTIVE
        - COMPLETED
        - CANCELED
        - EXPIRED
    AuctionStatus:
      type: string
      enum:
        - ENDED
        - ONGOING
        - PAUSED
        - SCHEDULED
        - CANCELED
    AuctionType:
      type: string
      enum:
        - DUTCH
    BidStatus:
      type: string
      enum:
        - ACCEPTED
        - PENDING
        - REJECTED
        - CANCELED
