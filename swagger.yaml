openapi: 3.0.3
info:
  title: Asset Inventory API
  version: 1.0.0
  description: API for managing assets and listings in the inventory.

paths:
  /assets/{userAddress}:
    get:
      summary: Get all assets for a user
      description: |
        Retrieves all the assets owned by a user with the given address.
        The API requires an authentication token in the header, specifying either user or admin.
      parameters:
        - name: userAddress
          in: path
          description: The Ethereum address of the user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assets:
                    type: array
                    items:
                      $ref: "#/components/schemas/Asset"

  /assets/{addressOrShortUrl}/{nftId}:
    get:
      summary: Get asset details for an NFT
      description: |
        Retrieves additional information about an asset in the inventory.
      parameters:
        - name: addressOrShortUrl
          in: path
          description: The Ethereum address or short URL of the user's collection.
          required: true
          schema:
            type: string
        - name: nftId
          in: path
          description: The ID of the NFT.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assets:
                    type: array
                    items:
                      $ref: "#/components/schemas/AssetDetails"

  /{userAddress}/{assetId}:
    get:
      summary: Get asset details for an asset in the inventory
      description: |
        Retrieves detailed information about an asset in the inventory.
      parameters:
        - name: userAddress
          in: path
          description: The Ethereum address of the user.
          required: true
          schema:
            type: string
        - name: assetId
          in: path
          description: The ID of the asset.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetDetails"

components:
  schemas:
    Asset:
      type: object
      properties:
        name:
          type: string
          description: Name of the token.
        collection:
          $ref: "#/components/schemas/Collection"
        collectionAddress:
          type: string
          description: Address of the collection.
        id:
          type: string
          description: ID of the asset.
        image:
          type: string
          description: Link to the thumbnail image.
        Listings:
          type: array
          items:
            $ref: "#/components/schemas/Listing"

    AssetDetails:
      type: object
      properties:
        name:
          type: string
          description: Name of the token.
        collection:
          $ref: "#/components/schemas/Collection"
        collectionAddress:
          type: string
          description: Address of the collection.
        id:
          type: string
          description: ID of the asset.
        image:
          type: string
          description: Link to the asset image.
        Listings:
          type: array
          items:
            $ref: "#/components/schemas/Listing"

    Collection:
      type: object
      properties:
        chainId:
          type: integer
          description: The chain ID of the collection.
        name:
          type: string
          description: Name of the collection.
        shortUrl:
          type: string
          description: Short URL of the collection.
        standard:
          type: string
          description: Type of token standard.

    Listing:
      type: object
      properties:
        price:
          type: integer
          description: The price of the asset.
        endTime:
          type: integer
          description: The end time of the listing.
        status:
          type: integer
          description: The status of the listing.
        saleData:
          $ref: "#/components/schemas/SaleData"

    SaleData:
      type: object
      properties:
        expirationTimestamp:
          type: integer
          description: Expiration timestamp of the sale.
        Lister:
          type: string
          description: Address of the lister.
        ownerSignature:
          type: string
          description: Owner's signature.
        Price:
          type: integer
          description: Price of the asset.
